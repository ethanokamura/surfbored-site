---
import Layout from '../layouts/Layout.astro';
import Tag from '../components/Tag.astro';
import { Icon } from 'astro-icon';
import { techstack } from '../utils/data.json';
---
  
<Layout>
  <div class="w-full flex justify-end">
    <button id="theme-toggle" type="button" class="text-text2 dark:text-darktext2 hover:bg-accent dark:hover:bg-darkaccent rounded-full text-sm p-2.5">
      <svg id="theme-toggle-dark-icon" class="hidden w-5 h-5" fill="#1a1a1a" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path></svg>
      <svg id="theme-toggle-light-icon" class="hidden w-5 h-5" fill="#e1e6f0" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" fill-rule="evenodd" clip-rule="evenodd"></path></svg>
    </button>
  </div>
  <section class="h-screen justify-center text-center gap-10">
    <div class="flex flex-col items-center">
      <h1 class="text-5xl md:text-[10em]">SurfBored</h1>
      <div class="flex gap-1 items-center">
        <p class="text-sm md:text-4xl text-text2 max-w-fit inline-block animate-typing overflow-hidden whitespace-nowrap w-fit">
          Surf some boards and find cool sh*t to do.
        </p>
        <div class="animate-blink bg-text2  dark:bg-darktext2  h-4 w-1 md:h-8 md:w-2"></div>
      </div>
    </div>
    <p>Winter 2024</p>
  </section>

  <section class="flex w-full justify-center drop-shadow-grey dark:drop-shadow-black">
    <div class="w-64 translate-y-[25px]">
      <img class="rounded-lg" id="screenshot-01" src="images/light_screenshot_01.png"/>
    </div>
    <div class="w-64 translate-y-[-25px]">
      <img class="rounded-lg" id="screenshot-00" src="images/light_screenshot_00.png"/>
    </div>
    <div class="w-64 translate-y-[25px]">
      <img class="rounded-lg" id="screenshot-02" src="images/light_screenshot_02.png"/>
    </div>
  </section>

  <main>
    <section>
      <h1>Why use SurfBored? ðŸ¤”</h1>
        <p>Need something to do today? Create boards with your favorite activities! Or better yet, find someone else's board to find something new.</p>
        <p>Have trouble choosing? SurfBored's shuffle feature will pick activities at random so you dont have to.</p>
        <p>Search for tags to find new activites you'll love!</p>
    </section>

    <section class="text-center">
      <h1>Tech Stack</h1>
      <div class="flex flex-wrap justify-center gap-4">
        {techstack.map((skill: any) =>
          <Tag>
            <div class="w-10"><Icon name={skill.icon}/></div>
            <p class="pr-2 text-xl font-semibold">{skill.title}</p>
          </Tag>
        )}
      </div>
    </section>

    <section class="text-center">
      <h1>Github Repo ðŸ’»</h1>
      <p>
        Come check out our GitHub!
      </p>
      <a href="https://github.com/ethanokamura/surfbored" target="_blank" class="text-primary dark:text-darkprimary drop-shadow-glow">Link to Repository</a>
    </section>

    <section>
      <h1>Frontend ðŸ”¥</h1>
      <p>
        The entire front end is written in Dart using the Flutter framework.
      </p>
      <p>
        Flutter has allowed us to effectively create a cross platform application so we can bring our app to the user faster!
      </p>
    </section>

    <section>
      <h1>Handling Data and State ðŸ’¾</h1>
      <p>
        To improve the end user's experience, the app uses cubits to handle state along side the work done in the backend.
      </p>

      <p>Basic Structure: UI â‡† Cubit â‡† Repository</p>
      <ul>
        <li>UI: the end point for the user</li>
        <li>Cubit: emits and handles state changes</li>
        <li>Repositories: handle requests and responses to the API's</li>
      </ul>

    </section>

    <section>
      <h1>Backend ðŸ”’</h1>
      <p>
        For the backend, we chose to use Firebase to handle authentication, storage, and cloud functions.
        This has allowed us to ship our app as fast as possible.
      </p>
      <p>
        To handle full-text search, we turned to Algolia which pairs perfectly with our Firebase data.
      </p>
    </section>
  </main>
</Layout>
